//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CharRotation charRotation { get { return (CharRotation)GetComponent(GameComponentsLookup.CharRotation); } }
    public bool hasCharRotation { get { return HasComponent(GameComponentsLookup.CharRotation); } }

    public void AddCharRotation(UnityEngine.Quaternion newRotation, bool newDirty) {
        var index = GameComponentsLookup.CharRotation;
        var component = CreateComponent<CharRotation>(index);
        component.rotation = newRotation;
        component.dirty = newDirty;
        AddComponent(index, component);
    }

    public void ReplaceCharRotation(UnityEngine.Quaternion newRotation, bool newDirty) {
        var index = GameComponentsLookup.CharRotation;
        var component = CreateComponent<CharRotation>(index);
        component.rotation = newRotation;
        component.dirty = newDirty;
        ReplaceComponent(index, component);
    }

    public void RemoveCharRotation() {
        RemoveComponent(GameComponentsLookup.CharRotation);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCharRotation;

    public static Entitas.IMatcher<GameEntity> CharRotation {
        get {
            if (_matcherCharRotation == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CharRotation);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCharRotation = matcher;
            }

            return _matcherCharRotation;
        }
    }
}
