//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CharDirtyComponent charDirty { get { return (CharDirtyComponent)GetComponent(GameComponentsLookup.CharDirty); } }
    public bool hasCharDirty { get { return HasComponent(GameComponentsLookup.CharDirty); } }

    public void AddCharDirty(bool newDirty) {
        var index = GameComponentsLookup.CharDirty;
        var component = CreateComponent<CharDirtyComponent>(index);
        component.dirty = newDirty;
        AddComponent(index, component);
    }

    public void ReplaceCharDirty(bool newDirty) {
        var index = GameComponentsLookup.CharDirty;
        var component = CreateComponent<CharDirtyComponent>(index);
        component.dirty = newDirty;
        ReplaceComponent(index, component);
    }

    public void RemoveCharDirty() {
        RemoveComponent(GameComponentsLookup.CharDirty);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCharDirty;

    public static Entitas.IMatcher<GameEntity> CharDirty {
        get {
            if (_matcherCharDirty == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CharDirty);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCharDirty = matcher;
            }

            return _matcherCharDirty;
        }
    }
}
